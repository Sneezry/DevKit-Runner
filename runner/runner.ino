#include "Arduino.h"

static const unsigned char d0[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 0x00,0x00,0xf8,0xfc,0xe4,0xfc,0xfc,0xfc,
    0xfc,0xfc,0xfc,0xf8,0x00,0x00,0x00,0x00, 0xfc,0xf0,0xe0,0xc0,0xc0,0xe0,0xf0,0xf0,
    0xf8,0xfc,0xff,0xff,0xff,0xff,0x13,0x32, 0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x01,0x03,0x07,0x0f,0xff,0xbf,0x1f, 0x0f,0x0f,0x1f,0x17,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};

static const unsigned char d1[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 0x00,0x00,0xf8,0xfc,0xe4,0xfc,0xfc,0xfc,
    0xfc,0xfc,0xfc,0xf8,0x00,0x00,0x00,0x00, 0xfc,0xf0,0xe0,0xc0,0xc0,0xe0,0xf0,0xf0,
    0xf8,0xfc,0xff,0xff,0xff,0xff,0x13,0x32, 0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x01,0x03,0x07,0x0f,0x1f,0x3f,0x2f, 0x0f,0x1f,0xff,0x87,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};

static const unsigned char d2[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 0x00,0x00,0xc0,0xe0,0x20,0xe0,0xe0,0xe0,
    0xe0,0xe0,0xe0,0xc0,0x00,0x00,0x00,0x00, 0xe0,0x80,0x00,0x00,0x00,0x00,0x80,0x80,
    0xc0,0xe0,0xff,0xff,0xff,0xff,0x9f,0x97, 0x17,0x17,0x07,0x07,0x00,0x00,0x00,0x00,
    0x07,0x0f,0x1f,0x3e,0x7e,0xff,0xff,0xff, 0x7f,0xff,0xff,0x3f,0x1f,0x07,0x00,0x01,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,0x00,0x07,0x05,0x00,
    0x00,0x00,0x07,0x04,0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
    
static const unsigned char d3[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 0x00,0x00,0xf8,0xfc,0xe4,0xfc,0xfc,0xfc,
    0xfc,0xfc,0xfc,0xf8,0x00,0x00,0x00,0x00, 0xfc,0xf0,0xe0,0xc0,0xc0,0xe0,0xf0,0xf0,
    0xf8,0xfc,0xff,0xff,0xff,0xff,0x13,0x32, 0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x01,0x03,0x07,0x0f,0xff,0xbf,0x1f, 0x0f,0x1f,0xff,0x87,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};

static const unsigned char p[] = {0x00,0x00,0x80,0xc0,0x80,0x00,0xfe,0xff, 0xff,0xfe,0x00,0xc0,0xe0,0xc0,0x00,0x00,
    0x00,0x00,0x7f,0xff,0xff,0xc0,0xff,0xff, 0xff,0xff,0xc0,0xff,0x7f,0x3f,0x00,0x00,
    0x00,0x00,0x00,0x00,0x01,0x01,0xff,0xff, 0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00};

static const unsigned char o0[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 0x00,0x00,0xf8,0xfc,0xe4,0xfc,0xfc,0xfc,
    0xfc,0xfc,0xfc,0xf8,0x80,0x00,0xfe,0xff, 0xff,0xfe,0x00,0xc0,0xe0,0xc0,0x00,0x00,
    0xfc,0xf0,0xe0,0xc0,0xc0,0xe0,0xf0,0xf0, 0xf8,0xfc,0xff,0xff,0xff,0xff,0x13,0x32,
    0x02,0x02,0x7f,0xff,0xff,0xc0,0xff,0xff, 0xff,0xff,0xc0,0xff,0x7f,0x3f,0x00,0x00,
    0x00,0x01,0x03,0x07,0x0f,0xff,0xbf,0x1f, 0x0f,0x1f,0xff,0x87,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x01,0x01,0xff,0xff, 0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00};
    
static const unsigned char o1[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 0x00,0x00,0xc0,0xe0,0x20,0xe0,0xe0,0xe0,
    0xe0,0xe0,0xe0,0xc0,0x00,0x00,0x00,0x00, 0xe0,0x80,0x00,0x00,0x00,0x00,0x80,0x80,
    0xc0,0xe0,0xff,0xff,0xff,0xff,0x9f,0x97, 0x17,0x17,0x07,0x07,0x00,0x00,0x00,0x00,
    0x07,0x0f,0x1f,0x3e,0x7e,0xff,0xff,0xff, 0x7f,0xff,0xff,0x3f,0x1f,0x07,0x00,0x01,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 0x00,0x00,0x80,0xc0,0x80,0x07,0xff,0xff,
    0xff,0xfe,0x07,0xc4,0xe0,0xc0,0x00,0x00, 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x7f,0xff,0xff,0xc0,0xff,0xff, 0xff,0xff,0xc0,0xff,0x7f,0x3f,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,0x01,0x01,0xff,0xff,
    0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};

int run = 0;
int jump = 0;
int cactus = 0;
int score = 0;
char scoreBuf[16];

bool isReleased = true;
bool over = false;

void setup() {
    
}

bool IsButtonClicked(unsigned char ulPin) {
    pinMode(ulPin, INPUT);
    int buttonState = digitalRead(ulPin);
    if(buttonState == LOW)
    {
        return true;
    }
    return false;
}

void loop() {
    if (over) {
        return;
    }

    if (IsButtonClicked(USER_BUTTON_A)) {
        if (isReleased && jump == 0) {
            jump = 1;
        }
        isReleased = false;
    } else {
        isReleased = true;
    }

    if (cactus == 0 && random(10) > 5) {
        cactus = 1;
    } else if (cactus > 8) {
        cactus = 0;
    }

    Screen.clean();

    if (jump != 1 && cactus == 6) {
        Screen.print(2, "      Game Over!", false);
        if (jump == 0) {
            Screen.draw(16, 4, 48, 8, (unsigned char*)o0);
        } else {
            Screen.draw(16, 2, 40, 8, (unsigned char*)o1);
        }

        snprintf(scoreBuf, 16, "Score: %d", score);
        Screen.print(0, scoreBuf, false);

        over = true;
        return;
    }

    if (jump == 1) {
        Screen.draw(16, 3, 40, 7, (unsigned char*)d2);
        jump = 2;
    } else if (jump == 2) {
        Screen.draw(16, 2, 40, 5, (unsigned char*)d3);
        jump = 3;
    } else if (jump == 3) {
        Screen.draw(16, 3, 40, 7, (unsigned char*)d2);
        jump = 0;
    } else if (run == 0) {
        Screen.draw(16, 5, 40, 8, (unsigned char*)d0);
        run = 1;
    } else if (run == 1) {
        Screen.draw(16, 5, 40, 8, (unsigned char*)d1);
        run = 0;
    }

    if (cactus > 0) {
        Screen.draw((8 - cactus) * 16, 5, (9 - cactus) * 16, 8, (unsigned char*)p);
        cactus++;
    }

    score++;
    delay(125);
}
